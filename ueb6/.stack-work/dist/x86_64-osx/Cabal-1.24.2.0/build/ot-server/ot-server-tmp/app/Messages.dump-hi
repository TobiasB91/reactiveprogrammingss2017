
==================== FINAL INTERFACE ====================
2017-06-29 16:43:48.069418 UTC

interface main@main:Messages [orphan module] 8002
  interface hash: fb61b7b22d8819d9534541ca24db51f6
  ABI hash: a2c2f61a1cb103a9fd6ea1108216db57
  export-list hash: 385e4dea29c98591c1425fd99643fce5
  orphan hash: 7fce06186b8a741956cd0f38375ebfbb
  flag hash: 1d406d00451669a38711bf0c229db325
  sig of: Nothing
  used TH splices: False
  where
exports:
  Messages.ClientMessage{Messages.ClientEdit}
  Messages.ServerMessage{Messages.Ack Messages.HelloGuys Messages.RemoteEdit}
module dependencies:
package dependencies: OT-0.1.0@OT-0.1.0-1gqFYEXZiYEIActA72Dzk7
                      aeson-1.0.2.1@aeson-1.0.2.1-7SRc0E2ovMGDtD3x4FKjWQ
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-DRMYON11vLW10yp1r3HlfE
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-IEHCuEd5sG4JjSjlx7m5JF
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      scientific-0.3.4.15@scientific-0.3.4.15-8KhnwsMCJdHAmYurRJsTmW
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      transformers-0.5.2.0@transformers-0.5.2.0
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-DRMYON11vLW10yp1r3HlfE:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-DRMYON11vLW10yp1r3HlfE:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x:Data.Hashable.Generic
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-DRMYON11vLW10yp1r3HlfE:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD:Data.DList
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed.Base
import  -/  OT-0.1.0@OT-0.1.0-1gqFYEXZiYEIActA72Dzk7:OT 1ae7a8b84ee1a358a47eeacff780ebee
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-7SRc0E2ovMGDtD3x4FKjWQ:Data.Aeson 662afe43c8cccc1b7b9e071d9c781caf
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-7SRc0E2ovMGDtD3x4FKjWQ:Data.Aeson.Types.FromJSON db989ea6712b4bd681f88e3e40d3e8c5
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-7SRc0E2ovMGDtD3x4FKjWQ:Data.Aeson.Types.Internal 4a770273d9307ddb928d81a497c9a16e
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-7SRc0E2ovMGDtD3x4FKjWQ:Data.Aeson.Types.ToJSON f7f2c0617359596996d98c4b557eb4a9
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base 8b155a212edaca6c85bcefe65a8bc505
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Lazy 93f3e08c64c8d53594cb9bfa4450a091
6444206a347c4eb3672811a3d597c6c7
  $fFromJSONClientMessage ::
    Data.Aeson.Types.FromJSON.FromJSON Messages.ClientMessage
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Messages.ClientMessage
                  Messages.$fFromJSONClientMessage_$cparseJSON
                  Messages.$fFromJSONClientMessage_$cparseJSONList -}
6444206a347c4eb3672811a3d597c6c7
  $fFromJSONClientMessage1 ::
    [Data.Aeson.Types.Internal.Parser Messages.ClientMessage]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [Messages.ClientMessage] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
616ca15fee9fd8cfe2747114e1765000
  $fFromJSONClientMessage2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "[a]"#) -}
6444206a347c4eb3672811a3d597c6c7
  $fFromJSONClientMessage_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Messages.ClientMessage
  {- Arity: 1, Strictness: <S,1*U> -}
6444206a347c4eb3672811a3d597c6c7
  $fFromJSONClientMessage_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Messages.ClientMessage]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [Messages.ClientMessage]
                        Messages.$fFromJSONClientMessage2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (Messages.$fFromJSONClientMessage1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          Messages.$fFromJSONClientMessage_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Messages.ClientMessage]>_R)) } }) -}
6444206a347c4eb3672811a3d597c6c7
  $fFromJSONClientMessage_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser Messages.ClientMessage]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
389e9e7a2c6bd60891b5cb93c2d218b0
  $fFromJSONTextAction ::
    Data.Aeson.Types.FromJSON.FromJSON OT.TextAction
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ OT.TextAction
                  Messages.$fFromJSONTextAction_$cparseJSON
                  Messages.$fFromJSONTextAction_$cparseJSONList -}
876f6931c7f9ffa58bb9344c7216bff8
  $fFromJSONTextAction1 ::
    [Data.Aeson.Types.Internal.Parser OT.TextAction]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [OT.TextAction] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
52b8164e31ab0b03aad1855b8bd5aa86
  $fFromJSONTextAction_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser OT.TextAction
  {- Arity: 1, Strictness: <S,1*U> -}
3b6e692d9a2dc38ba7ac61e7d312baeb
  $fFromJSONTextAction_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [OT.TextAction]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [OT.TextAction]
                        Messages.$fFromJSONClientMessage2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (Messages.$fFromJSONTextAction1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          Messages.$fFromJSONTextAction_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[OT.TextAction]>_R)) } }) -}
7a6385bb9df7a7ad9097202a9c29daf8
  $fFromJSONTextAction_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser OT.TextAction]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
f27bcbffa3d7ae8bc8f7d6d1e28df372
  $fFromJSONTextOperation ::
    Data.Aeson.Types.FromJSON.FromJSON OT.TextOperation
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ OT.TextOperation
                  Messages.$fFromJSONTextOperation_$cparseJSON
                  Messages.$fFromJSONTextOperation_$cparseJSONList -}
089d5d62d10e7c787af2121f2c426943
  $fFromJSONTextOperation1 ::
    [Data.Aeson.Types.Internal.Parser OT.TextOperation]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [OT.TextOperation] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
cfe7cc0d04de61fa40c7e29d901d9f0b
  $fFromJSONTextOperation2 ::
    Data.Aeson.Types.Internal.Parser OT.TextOperation
  {- Strictness: x -}
e1716524ed087d399e28690281af9ea5
  $fFromJSONTextOperation_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser OT.TextOperation
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT -> Messages.$fFromJSONTextOperation2
                   Data.Aeson.Types.Internal.Array a
                   -> let {
                        m :: Data.Aeson.Types.Internal.Parser [OT.TextAction]
                        = case a of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                          (Messages.$fFromJSONTextAction1
                             (letrec {
                                $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                                  {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                                = \ (ww :: GHC.Prim.Int#) ->
                                  case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.>=# ww dt1) of wild2 {
                                    GHC.Types.False
                                    -> case GHC.Prim.indexArray#
                                              @ Data.Aeson.Types.Internal.Value
                                              dt2
                                              (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                       GHC.Types.:
                                         @ Data.Aeson.Types.Internal.Value
                                         ipv
                                         ($wgo (GHC.Prim.+# ww 1#)) }
                                    GHC.Types.True
                                    -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                              } in
                              Messages.$fFromJSONTextAction_go 0# ($wgo 0#)))
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0] <[OT.TextAction]>_R)) }
                      } in
                      (\ @ (f :: * -> *)
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f r)
                         (ks :: Data.Aeson.Types.Internal.Success OT.TextOperation f r) ->
                       m `cast`
                       (Data.Aeson.Types.Internal.N:Parser[0] <[OT.TextAction]>_R)
                         @ f
                         @ r
                         path
                         kf
                         (\ (a1 :: [OT.TextAction]) ->
                          ks a1 `cast` (Sym (OT.N:TextOperation[0]))))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <OT.TextOperation>_R)) }) -}
cc503c5adc8915cda81b3e1ab721ae1f
  $fFromJSONTextOperation_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [OT.TextOperation]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [OT.TextOperation]
                        Messages.$fFromJSONClientMessage2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (Messages.$fFromJSONTextOperation1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          Messages.$fFromJSONTextOperation_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[OT.TextOperation]>_R)) } }) -}
3120b04df7a4b36e50a5f46ef1f7394c
  $fFromJSONTextOperation_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser OT.TextOperation]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
a70dba45d1574094709408e919983893
  $fToJSONServerMessage ::
    Data.Aeson.Types.ToJSON.ToJSON Messages.ServerMessage
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Messages.ServerMessage
                  Messages.$fToJSONServerMessage_$ctoJSON
                  Messages.$fToJSONServerMessage_$ctoEncoding
                  Messages.$fToJSONServerMessage_$ctoJSONList
                  Messages.$fToJSONServerMessage_$ctoEncodingList -}
298c92ac33558c9101f0ec2981cc1ec9
  $fToJSONServerMessage1 :: Data.Aeson.Types.Internal.Value
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "helloguys"# of dt1 { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.String dt1 }) -}
f34ced86e9b444a28175792d02f91be1
  $fToJSONServerMessage2 :: Data.Aeson.Types.Internal.Value
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "ack"# of dt1 { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.String dt1 }) -}
ac45a90d5060f80ad91b7d755b80a4de
  $fToJSONServerMessage3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
9973e4170ff14142f78f3bb6a8135a3f
  $fToJSONServerMessage4 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          Data.Aeson.Types.Internal.Value,
        GHC.Types.Int)
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Data.Aeson.Types.Internal.Value,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
daca1af6cd425cffc536f3c76082c035
  $fToJSONServerMessage5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "cursors"#) -}
6186c47895ced13f81279e0c635d7639
  $fToJSONServerMessage6 :: Data.Aeson.Types.Internal.Value
  {- HasNoCafRefs, Strictness: m4,
     Unfolding: (Data.Aeson.Types.Internal.Number
                   Messages.$fToJSONServerMessage_dt1) -}
6f2268a162dae7f99cb7d721fd760a86
  $fToJSONServerMessage7 :: Data.Aeson.Types.Internal.Value
  {- HasNoCafRefs, Strictness: m4,
     Unfolding: (Data.Aeson.Types.Internal.Number
                   Messages.$fToJSONServerMessage_dt2) -}
77aa324da6a701fb5b912f5dc023d934
  $fToJSONServerMessage8 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          Data.Aeson.Types.Internal.Value,
        GHC.Types.Int)
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Data.Aeson.Types.Internal.Value,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
f8c906882870e605f1eac5042d4a9f6b
  $fToJSONServerMessage9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "op"#) -}
a70dba45d1574094709408e919983893
  $fToJSONServerMessage_$ctoEncoding ::
    Messages.ServerMessage -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Messages.ServerMessage) ->
                 Data.Aeson.Encoding.Internal.value
                   (Messages.$fToJSONServerMessage_$ctoJSON eta)) -}
a70dba45d1574094709408e919983893
  $fToJSONServerMessage_$ctoEncodingList ::
    [Messages.ServerMessage] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Messages.ServerMessage]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Messages.$fToJSONServerMessage_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Messages.ServerMessage
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Messages.ServerMessage)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Messages.$fToJSONServerMessage_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Messages.ServerMessage>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
a70dba45d1574094709408e919983893
  $fToJSONServerMessage_$ctoJSON ::
    Messages.ServerMessage -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Messages.ServerMessage) ->
                 case ds of wild {
                   Messages.RemoteEdit op cursors
                   -> case Data.Aeson.Types.Internal.$sfromList1
                             @ Data.Aeson.Types.Internal.Value
                             (GHC.Types.:
                                @ Data.Aeson.Types.Internal.Pair
                                (Messages.$fToJSONServerMessage9,
                                 Messages.$fToJSONServerMessage_$ctoJSON1 op)
                                (GHC.Types.:
                                   @ Data.Aeson.Types.Internal.Pair
                                   (Messages.$fToJSONServerMessage5,
                                    case GHC.Magic.runRW#
                                           @ 'GHC.Types.PtrRepLifted
                                           @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                                           (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                            case GHC.Prim.newArray#
                                                   @ Data.Aeson.Types.Internal.Value
                                                   @ (Control.Monad.Primitive.PrimState
                                                        (GHC.ST.ST GHC.Prim.RealWorld))
                                                   0#
                                                   (Data.Vector.Mutable.uninitialised
                                                      @ Data.Aeson.Types.Internal.Value)
                                                   s1
                                                     `cast`
                                                   (GHC.Prim.State#
                                                      (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                                            case Messages.$fToJSONServerMessage4
                                                   GHC.Types.SPEC
                                                   ((Data.Vector.Mutable.MVector
                                                       @ (Control.Monad.Primitive.PrimState
                                                            (GHC.ST.ST GHC.Prim.RealWorld))
                                                       @ Data.Aeson.Types.Internal.Value
                                                       0#
                                                       0#
                                                       ipv1)
                                                      `cast`
                                                    (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                     (GHC.ST.ST
                                                                                                        GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N),
                                                    Messages.$fToJSONServerMessage3)
                                                   (Messages.$fToJSONServerMessage_go10
                                                      (GHC.Types.[]
                                                         @ Data.Aeson.Types.Internal.Value)
                                                      cursors)
                                                   ipv
                                                     `cast`
                                                   (GHC.Prim.State#
                                                      (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                           <GHC.Prim.RealWorld>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                                            case ipv7 of wild5 { (,) v' n ->
                                            case v'
                                                   `cast`
                                                 (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                                            (GHC.ST.ST
                                                                                               GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N) of wild1 { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                                            case n of dt5 { GHC.Types.I# dt6 ->
                                            case GHC.Prim.unsafeFreezeArray#
                                                   @ (Control.Monad.Primitive.PrimState
                                                        (GHC.ST.ST GHC.Prim.RealWorld))
                                                   @ Data.Aeson.Types.Internal.Value
                                                   dt2
                                                   ipv6
                                                     `cast`
                                                   (GHC.Prim.State#
                                                      (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                                            (# ipv2
                                                 `cast`
                                               (GHC.Prim.State#
                                                  (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                       <GHC.Prim.RealWorld>_N))_R,
                                               Data.Vector.Vector
                                                 @ Data.Aeson.Types.Internal.Value
                                                 dt
                                                 dt6
                                                 ipv3 #) } } } } } }) of ds1 { (#,#) ipv1 ipv2 ->
                                    case ipv2 of dt1 { Data.Vector.Vector ipv ipv4 ipv5 ->
                                    Data.Aeson.Types.Internal.Array dt1 } })
                                   (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                             (Data.HashMap.Base.Empty
                                @ Data.Text.Internal.Text
                                @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                      Data.Aeson.Types.Internal.Object dt }
                   Messages.Ack -> Messages.$fToJSONServerMessage2
                   Messages.HelloGuys -> Messages.$fToJSONServerMessage1 }) -}
46658dac8553e8fd374dc3e70b70fed4
  $fToJSONServerMessage_$ctoJSON1 ::
    OT.TextOperation -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: OT.TextOperation) ->
                 case Messages.$w$ctoJSON w of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.Array ww1 }) -}
cfdc9da1d87bec44828835063c7bf29d
  $fToJSONServerMessage_$ctoJSON2 ::
    OT.TextAction -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: OT.TextAction) ->
                 case ds of wild {
                   OT.Retain -> Messages.$fToJSONServerMessage7
                   OT.Insert c
                   -> case Data.Text.Show.singleton_
                             c of dt1 { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                      Data.Aeson.Types.Internal.String dt1 }
                   OT.Delete -> Messages.$fToJSONServerMessage6 }) -}
a70dba45d1574094709408e919983893
  $fToJSONServerMessage_$ctoJSONList ::
    [Messages.ServerMessage] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Messages.ServerMessage]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Messages.ServerMessage
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Messages.ServerMessage
                                       c
                                       Messages.$fToJSONServerMessage_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
6daed8abe1f58c56051390dc874625e1
  $fToJSONServerMessage_dt :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-1) -}
874d190c612d21157430d3996de30c63
  $fToJSONServerMessage_dt1 :: Data.Scientific.Scientific
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Data.Scientific.Scientific
                   Messages.$fToJSONServerMessage_dt
                   0#) -}
bb1845e2feaee201506fa8747d8286b6
  $fToJSONServerMessage_dt2 :: Data.Scientific.Scientific
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Data.Scientific.Scientific
                   Messages.$fToJSONServerMessage_dt3
                   0#) -}
64b6f9dcd73e8b7ff2a2a0798feb503b
  $fToJSONServerMessage_dt3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
7187f3d99c83994cee381d880b212659
  $fToJSONServerMessage_go10 ::
    [Data.Aeson.Types.Internal.Value]
    -> Data.Map.Base.Map GHC.Types.Int GHC.Types.Int
    -> [Data.Aeson.Types.Internal.Value]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><S,1*U> -}
fc72d858db60856ac971d546ecc4a2d8
  $fToJSONTextAction :: Data.Aeson.Types.ToJSON.ToJSON OT.TextAction
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ OT.TextAction
                  Messages.$fToJSONServerMessage_$ctoJSON2
                  Messages.$fToJSONTextAction_$ctoEncoding
                  Messages.$fToJSONTextAction_$ctoJSONList
                  Messages.$fToJSONTextAction_$ctoEncodingList -}
58f82bf7a043ada37767520c0b578a5b
  $fToJSONTextAction_$ctoEncoding ::
    OT.TextAction -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: OT.TextAction) ->
                 Data.Aeson.Encoding.Internal.value
                   (Messages.$fToJSONServerMessage_$ctoJSON2 eta)) -}
e5e7131c8b2707c2b2ea99053b467481
  $fToJSONTextAction_$ctoEncodingList ::
    [OT.TextAction] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [OT.TextAction]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Messages.$fToJSONServerMessage_$ctoJSON2 x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ OT.TextAction
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: OT.TextAction)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Messages.$fToJSONServerMessage_$ctoJSON2 v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<OT.TextAction>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
a2ae64d08cb7b53a1a73450904778514
  $fToJSONTextAction_$ctoJSONList ::
    [OT.TextAction] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [OT.TextAction]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ OT.TextAction
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ OT.TextAction
                                       c
                                       Messages.$fToJSONServerMessage_$ctoJSON2)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
59a04a48649985d636c2a5ed82f04895
  $fToJSONTextOperation ::
    Data.Aeson.Types.ToJSON.ToJSON OT.TextOperation
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ OT.TextOperation
                  Messages.$fToJSONServerMessage_$ctoJSON1
                  Messages.$fToJSONTextOperation_$ctoEncoding
                  Messages.$fToJSONTextOperation_$ctoJSONList
                  Messages.$fToJSONTextOperation_$ctoEncodingList -}
5431e9b6e0e64f79da15d0d8c98d7e55
  $fToJSONTextOperation_$ctoEncoding ::
    OT.TextOperation -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: OT.TextOperation) ->
                 Data.Aeson.Encoding.Internal.value
                   (Messages.$fToJSONServerMessage_$ctoJSON1 eta)) -}
c684eb8e365fc086a155e4cbf64f226c
  $fToJSONTextOperation_$ctoEncodingList ::
    [OT.TextOperation] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [OT.TextOperation]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Messages.$fToJSONServerMessage_$ctoJSON1 x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ OT.TextOperation
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: OT.TextOperation)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Messages.$fToJSONServerMessage_$ctoJSON1 v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<OT.TextOperation>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
15f94f7a883d43c94a20add52e3514a1
  $fToJSONTextOperation_$ctoJSONList ::
    [OT.TextOperation] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [OT.TextOperation]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ OT.TextOperation
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ OT.TextOperation
                                       c
                                       Messages.$fToJSONServerMessage_$ctoJSON1)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
a246e9768c5e4af502b27d5e08ed0138
  $tc'Ack :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16980794033321270592##
                   17616659078359196223##
                   Messages.$trModule
                   Messages.$tc'Ack1) -}
145fac24c041a5f4fb2ed9bb2efa7390
  $tc'Ack1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Ack"#) -}
7ba15a1dc30b01daf9d32d8c8d5ea969
  $tc'ClientEdit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14797585811140233180##
                   1417365593607831548##
                   Messages.$trModule
                   Messages.$tc'ClientEdit1) -}
000c09219afd62f99b8df6c73d45d8b4
  $tc'ClientEdit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ClientEdit"#) -}
ac0676143e3b879dc5cfce1b801cea53
  $tc'HelloGuys :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3375854744311884165##
                   6519879519115705464##
                   Messages.$trModule
                   Messages.$tc'HelloGuys1) -}
bc9553d8b39765b6050f4c9e05b66463
  $tc'HelloGuys1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'HelloGuys"#) -}
11d5d35c471ecc420dff5e3e43170319
  $tc'RemoteEdit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14707140711199732763##
                   15677078284864512223##
                   Messages.$trModule
                   Messages.$tc'RemoteEdit1) -}
82a7e47a8e56b5b3e9e3b2252d5ba03e
  $tc'RemoteEdit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'RemoteEdit"#) -}
8297187a05cd567ca781f85a3f42adad
  $tcClientMessage :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1233330178487470421##
                   10727648457450807887##
                   Messages.$trModule
                   Messages.$tcClientMessage1) -}
a6ae5269509913c650850130a8131527
  $tcClientMessage1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ClientMessage"#) -}
ddb9b7e9def30f7f59fadf1a4513f9e7
  $tcServerMessage :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3518430313486436082##
                   12244313370949313986##
                   Messages.$trModule
                   Messages.$tcServerMessage1) -}
f42810dbf47ee9b05f40922bac21d473
  $tcServerMessage1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ServerMessage"#) -}
3e4fdda85bfc2e5efd7c650d183e450b
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Messages.$trModule2
                   Messages.$trModule1) -}
4b506b6facb47e9364f89536d290f9ee
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Messages"#) -}
bea13b9a66820821e4769705cadabd17
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
5e46be078e415587060df10654a034fa
  $w$ctoJSON ::
    OT.TextOperation -> (# Data.Aeson.Types.Internal.Array #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: OT.TextOperation) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                         case Messages.$fToJSONServerMessage8
                                GHC.Types.SPEC
                                ((Data.Vector.Mutable.MVector
                                    @ (Control.Monad.Primitive.PrimState
                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                    @ Data.Aeson.Types.Internal.Value
                                    0#
                                    0#
                                    ipv1)
                                   `cast`
                                 (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                  (GHC.ST.ST
                                                                                     GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N),
                                 Messages.$fToJSONServerMessage3)
                                (GHC.Base.map
                                   @ OT.TextAction
                                   @ Data.Aeson.Types.Internal.Value
                                   Messages.$fToJSONServerMessage_$ctoJSON2
                                   w `cast` (OT.N:TextOperation[0]))
                                ipv
                                  `cast`
                                (GHC.Prim.State#
                                   (Control.Monad.Primitive.D:R:PrimStateST[0]
                                        <GHC.Prim.RealWorld>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                         case ipv7 of wild5 { (,) v' n ->
                         case v'
                                `cast`
                              (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                         (GHC.ST.ST
                                                                            GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                         case n of dt5 { GHC.Types.I# dt6 ->
                         case GHC.Prim.unsafeFreezeArray#
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                @ Data.Aeson.Types.Internal.Value
                                dt2
                                ipv6
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                         (# ipv2
                              `cast`
                            (GHC.Prim.State#
                               (Control.Monad.Primitive.D:R:PrimStateST[0]
                                    <GHC.Prim.RealWorld>_N))_R,
                            Data.Vector.Vector
                              @ Data.Aeson.Types.Internal.Value
                              dt
                              dt6
                              ipv3 #) } } } } } }) of ds1 { (#,#) ipv1 ipv2 ->
                 case ipv2 of dt1 { Data.Vector.Vector ipv ipv4 ipv5 ->
                 (# dt1 #) } }) -}
6444206a347c4eb3672811a3d597c6c7
  data ClientMessage
    = ClientEdit GHC.Types.Int OT.TextOperation OT.Cursor
a70dba45d1574094709408e919983893
  data ServerMessage
    = RemoteEdit OT.TextOperation
                 (Data.Map.Base.Map GHC.Types.Int OT.Cursor)
    | Ack
    | HelloGuys
instance Data.Aeson.Types.FromJSON.FromJSON [Messages.ClientMessage]
  = Messages.$fFromJSONClientMessage
instance Data.Aeson.Types.FromJSON.FromJSON [OT.TextAction]
  = Messages.$fFromJSONTextAction
instance Data.Aeson.Types.FromJSON.FromJSON [OT.TextOperation]
  = Messages.$fFromJSONTextOperation
instance Data.Aeson.Types.ToJSON.ToJSON [Messages.ServerMessage]
  = Messages.$fToJSONServerMessage
instance Data.Aeson.Types.ToJSON.ToJSON [OT.TextAction]
  = Messages.$fToJSONTextAction
instance Data.Aeson.Types.ToJSON.ToJSON [OT.TextOperation]
  = Messages.$fToJSONTextOperation
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

